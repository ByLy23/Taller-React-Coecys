{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCat","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","id","titulo","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","img","GifApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KASA,OACE,sBAAMC,SANa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAAGR,GAAO,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OAClEN,EAAc,KAGd,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAboB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAanBG,YAAY,gC,+BClBPC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACP,EACE,mCACVC,EAHe,iDAGiCC,UACpDH,GAJmB,kBACP,EADO,oBAEL,oCAFK,SAMFI,MAAMF,GANJ,cAMfG,EANe,gBAOEA,EAAKC,OAPP,uBAObC,EAPa,EAObA,KACRC,QAAQC,IAAIF,GACNG,EAAOH,EAAKI,KAAI,YACpB,MAAO,CACLC,GAF6C,EAAxBA,GAGrBC,OAH6C,EAApBC,MAIzBZ,IAJ6C,EAAba,OAIpBC,iBAAiBd,QAbZ,kBAgBdQ,GAhBc,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAnBJ,EAAkB,EAAlBA,OAAQX,EAAU,EAAVA,IACpC,OACE,sBAAKgB,UAAU,OAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKP,IACpB,4BAAIA,QCFGQ,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAChBO,ECFkB,SAACP,GAC3B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IACGuB,EDXUK,CAAa5B,GAAtBO,KACR,OACE,gCACE,6BAAKP,IACL,qBAAKkB,UAAU,YAAf,SACGX,EAAKI,KAAI,SAACkB,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEPnBkB,EAAS,WACpB,MAAoC7C,mBAAS,IAA7C,mBAAO8C,EAAP,KAAmBC,EAAnB,KACA,OACE,gCACE,kDACA,cAAC,EAAD,CAAahD,OAAQgD,IACrB,uBACCD,EAAWpB,KAAI,SAAClB,GAAD,OACd,cAAC,EAAD,CAAmBO,SAAUP,GAAfA,U,MCPtBwC,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.022dff4d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const AddCategory = ({ setCat }) => {\r\n  const [InputValue, setInputValue] = useState('');\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (InputValue.trim().length > 1) setCat((cat) => [InputValue, ...cat]);\r\n    setInputValue('');\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={InputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Busca tu gif favorito...\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  const limit = 5;\r\n  const API_KEY = 'FfF1yANFCo0iZPnN22Lf4YEqRpbFyLE9';\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=${limit}&api_key=${API_KEY}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  console.log(data);\r\n  const gifs = data.map(({ id, title, images }) => {\r\n    return {\r\n      id: id,\r\n      titulo: title,\r\n      url: images.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ titulo, url }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={titulo} />\r\n      <p>{titulo}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data } = useFetchGifs(category);\r\n  return (\r\n    <div>\r\n      <h3>{category}</h3>\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifApp = () => {\r\n  const [categories, setcategories] = useState([]);\r\n  return (\r\n    <div>\r\n      <h1>Gif React Coecys</h1>\r\n      <AddCategory setCat={setcategories} />\r\n      <hr />\r\n      {categories.map((cat) => (\r\n        <GifGrid key={cat} category={cat} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifApp } from './GifApp';\nimport './index.css';\n\nReactDOM.render(<GifApp />, document.getElementById('root'));\n"],"sourceRoot":""}